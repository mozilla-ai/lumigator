name: Tests

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Initialize Pants
        uses: pantsbuild/actions/init-pants@main
        with:
          # cache0 makes it easy to bust the cache if needed
          gha-cache-key: pants-py3.10.13-v0
          # The Python backend uses named_caches for Pip/PEX state,
          # so it is appropriate to invalidate on lockfile changes.
          named-caches-hash: ${{ hashFiles('pants_tools/python_default.lock', '.python') }}
          # If you're not using a fine-grained remote caching service (see https://www.pantsbuild.org/docs/remote-caching),
          # then you may also want to preserve the local Pants cache (lmdb_store). However this must invalidate for
          # changes to any file that can affect the build, so may not be practical in larger repos.
          # A remote cache service integrates with Pants's fine-grained invalidation and avoids these problems.
          cache-lmdb-store: 'true'  # defaults to 'false'
          # Note that named_caches and lmdb_store falls back to partial restore keys which
          # may give a useful partial result that will save time over completely clean state,
          # but will cause the cache entry to grow without bound over time.
          # See https://pants.readme.io/docs/using-pants-in-ci for tips on how to periodically clean it up.
          # Alternatively you change gha-cache-key to ignore old caches.

      # todo - sort out why pants won't use the interpreter via the bootstrapper
      - name: Set up Python
        run: |
          make bootstrap-python


      - name: Lint
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run:
          for file in ${ALL_CHANGED_FILES}; do
            pants lint fmt $file;
          done

      - name: Test
        run:
          make ci-tests
