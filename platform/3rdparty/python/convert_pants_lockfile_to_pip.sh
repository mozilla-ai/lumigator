#!/usr/bin/env bash

# converts a lockfile generated by pants to a pip-installable requirements.txt file.
py3rdparty="platform/3rdparty/python"
DARWIN="${py3rdparty}/python_darwin.lock"
LINUX="${py3rdparty}/python_linux.lock"
LINUX_CUDA="${py3rdparty}/python_linux_cuda.lock"
LINUX_TAGS="pants_tools/python_3_11_9_linux_pex_platform_tags.json"
DARWIN_TAGS="pants_tools/python_3_11_9_macosx_14_pex_platform_tags.json"
wheels="WHEELS_DIR|${WORKSPACE}/wheelhouse"
convert() {
	lock=$1
	tags=$2
	out=$3
	sed '/^\/\//d' "$lock" >requirements.json
	pex3 venv create --complete-platform "$tags" --path-mapping "$wheels" --lock requirements.json -d "$out.venv"
	# pex3 lock export --complete-platform "$tags" --path-mapping "$wheels" requirements.json >"$out"
	# pex3 lock export --complete-platform "$tags" --path-mapping "$wheels" requirements.json >"$out"
	rm requirements.json
}
#sed '/^\/\//d' "$LINUX" >requirements.json
#echo "pex3 lock export --complete-platform $LINUX_TAGS --path-mapping $wheels requirements.json > requirements_linux.txt"
#pex3 lock export --complete-platform "$LINUX_TAGS" --path-mapping "$wheels" requirements.json > requirements_linux.txt
#rm requirements.json
convert "$DARWIN" "$DARWIN_TAGS" ${py3rdparty}/requirements_darwin.txt
convert "$LINUX" "$LINUX_TAGS" ${py3rdparty}/requirements_linux.txt
convert "$LINUX_CUDA" "$LINUX_TAGS" ${py3rdparty}/requirements_linux_cuda.txt

echo "to install the requirements file, run:"
echo "pip install --require-hashes --no-deps --no-cache-dir --upgrade -r <file>"
