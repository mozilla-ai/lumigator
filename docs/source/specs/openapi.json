{"openapi":"3.1.0","info":{"title":"Lumigator Backend","description":"Backend server","version":"0.0.1"},"paths":{"/api/v1/health/":{"get":{"tags":["health"],"summary":"Get Health","operationId":"get_health_api_v1_health__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"}}}}}}},"/api/v1/datasets/":{"post":{"tags":["datasets"],"summary":"Upload Dataset","description":"Uploads the dataset for use in Lumigator.\n\nAn uploaded dataset is parsed into HuggingFace format files and stored alongside a\nrecreated version of the input dataset.\n\nNOTE: The recreated version of the CSV file may not have identical delimiters as it will follow\nthe format that HuggingFace uses when it generates the CSV.","operationId":"upload_dataset_api_v1_datasets__post","requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_dataset_api_v1_datasets__post"}}}},"responses":{"201":{"description":"Dataset successfully uploaded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DatasetResponse"}}}},"413":{"description":"Max dataset size (50MB)"},"422":{"description":"Invalid CSV file"}}},"get":{"tags":["datasets"],"summary":"List Datasets","operationId":"list_datasets_api_v1_datasets__get","parameters":[{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListingResponse_DatasetResponse_"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/datasets/{dataset_id}":{"get":{"tags":["datasets"],"summary":"Get Dataset","operationId":"get_dataset_api_v1_datasets__dataset_id__get","parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Dataset Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DatasetResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["datasets"],"summary":"Delete Dataset","operationId":"delete_dataset_api_v1_datasets__dataset_id__delete","parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Dataset Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/datasets/{dataset_id}/download":{"get":{"tags":["datasets"],"summary":"Get Dataset Download","description":"Returns a collection of pre-signed URLs which can be used to download the dataset.","operationId":"get_dataset_download_api_v1_datasets__dataset_id__download_get","parameters":[{"name":"dataset_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Dataset Id"}},{"name":"extension","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"When specified, will be used to return only URLs for files which have a matching file extension. Wildcards are not accepted. By default all files are returned. e.g. csv","title":"Extension"},"description":"When specified, will be used to return only URLs for files which have a matching file extension. Wildcards are not accepted. By default all files are returned. e.g. csv"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DatasetDownloadResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/inference/":{"post":{"tags":["jobs"],"summary":"Create Inference Job","operationId":"create_inference_job_api_v1_jobs_inference__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobInferenceCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/annotate/":{"post":{"tags":["jobs"],"summary":"Create Annotation Job","description":"This uses a hardcoded model, that is, Lumigator's opinion on what\nreference model should be used to generate annotations.\nSee more: https://blog.mozilla.ai/lets-build-an-app-for-evaluating-llms/","operationId":"create_annotation_job_api_v1_jobs_annotate__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobAnnotateCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/evaluator/":{"post":{"tags":["jobs"],"summary":"Create Evaluation Job","operationId":"create_evaluation_job_api_v1_jobs_evaluator__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobEvalCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/":{"get":{"tags":["jobs"],"summary":"List Jobs","description":"Retrieves job data from the Lumigator repository where Ray\nmetadata is also available.\n\nResults are a merged representation which form an augmented view of a 'job'.\n\nNOTE: Lumigator repository data takes precedence over Ray metadata.","operationId":"list_jobs_api_v1_jobs__get","parameters":[{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Limit"}},{"name":"job_types","in":"query","required":false,"schema":{"type":"array","items":{"type":"string"},"default":[],"title":"Job Types"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListingResponse_Job_"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/{job_id}":{"get":{"tags":["jobs"],"summary":"Get Job","description":"Retrieves merged job data from the Lumigator repository and Ray\nfor a valid UUID.\n\nThe result is a merged representation which forms an augmented view of a 'job'.\n\nNOTE: Lumigator repository data takes precedence over Ray metadata.","operationId":"get_job_api_v1_jobs__job_id__get","parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Job"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/{job_id}/logs":{"get":{"tags":["jobs"],"summary":"Get Job Logs","operationId":"get_job_logs_api_v1_jobs__job_id__logs_get","parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobLogsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/{job_id}/result":{"get":{"tags":["jobs"],"summary":"Get Job Result","description":"Return job results metadata if available in the DB.","operationId":"get_job_result_api_v1_jobs__job_id__result_get","parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobResultResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/{job_id}/dataset":{"get":{"tags":["jobs"],"summary":"Get Job Dataset","description":"Return the job-associated dataset if available in the DB.","operationId":"get_job_dataset_api_v1_jobs__job_id__dataset_get","parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/DatasetResponse"},{"type":"null"}],"title":"Response Get Job Dataset Api V1 Jobs  Job Id  Dataset Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/jobs/{job_id}/result/download":{"get":{"tags":["jobs"],"summary":"Get Job Result Download","description":"Return job results file URL for downloading.","operationId":"get_job_result_download_api_v1_jobs__job_id__result_download_get","parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobResultDownloadResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/experiments/":{"post":{"tags":["experiments"],"summary":"Create Experiment Id","description":"Create an experiment ID.","operationId":"create_experiment_id_api_v1_experiments__post","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExperimentCreate"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetExperimentResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["experiments"],"summary":"List Experiments","description":"List all experiments.","operationId":"list_experiments_api_v1_experiments__get","parameters":[{"name":"skip","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Skip"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":100,"title":"Limit"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListingResponse_GetExperimentResponse_"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/experiments/{experiment_id}":{"get":{"tags":["experiments"],"summary":"Get Experiment","description":"Get an experiment by ID.","operationId":"get_experiment_api_v1_experiments__experiment_id__get","parameters":[{"name":"experiment_id","in":"path","required":true,"schema":{"type":"string","title":"Experiment Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetExperimentResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["experiments"],"summary":"Delete Experiment","description":"Delete an experiment by ID.","operationId":"delete_experiment_api_v1_experiments__experiment_id__delete","parameters":[{"name":"experiment_id","in":"path","required":true,"schema":{"type":"string","title":"Experiment Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/models/{task_name}":{"get":{"tags":["models"],"summary":"Get Suggested Models","description":"Get a list of suggested models for the given task.\n\nArgs:\n    task_name (str): The task name.\n\nReturns:\n    ListingResponse[str]: A list of suggested models.","operationId":"get_suggested_models_api_v1_models__task_name__get","parameters":[{"name":"task_name","in":"path","required":true,"schema":{"type":"string","title":"Task Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListingResponse_ModelsResponse_"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/workflows/":{"post":{"tags":["workflows"],"summary":"Create Workflow","description":"A workflow is a single execution for an experiment.\nA workflow is a collection of 1 or more jobs.\nIt must be associated with an experiment id,\nwhich means you must already have created an experiment and have that ID in the request.","operationId":"create_workflow_api_v1_workflows__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowCreateRequest"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/workflows/{workflow_id}":{"get":{"tags":["workflows"],"summary":"Get Workflow","description":"Get a workflow by ID.","operationId":"get_workflow_api_v1_workflows__workflow_id__get","parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"type":"string","title":"Workflow Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowDetailsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["workflows"],"summary":"Delete Workflow","description":"Delete a workflow by ID.","operationId":"delete_workflow_api_v1_workflows__workflow_id__delete","parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"type":"string","title":"Workflow Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowDetailsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/workflows/{workflow_id}/logs":{"get":{"tags":["workflows"],"summary":"Get Workflow Logs","description":"Get the logs for a workflow.","operationId":"get_workflow_logs_api_v1_workflows__workflow_id__logs_get","parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"type":"string","title":"Workflow Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobLogsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Get Root","operationId":"get_root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Body_upload_dataset_api_v1_datasets__post":{"properties":{"dataset":{"type":"string","format":"binary","title":"Dataset"},"format":{"$ref":"#/components/schemas/DatasetFormat"}},"type":"object","required":["dataset","format"],"title":"Body_upload_dataset_api_v1_datasets__post"},"DatasetDownloadResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"download_urls":{"items":{"type":"string"},"type":"array","title":"Download Urls"}},"type":"object","required":["id","download_urls"],"title":"DatasetDownloadResponse"},"DatasetFormat":{"type":"string","enum":["job"],"title":"DatasetFormat"},"DatasetResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"filename":{"type":"string","title":"Filename"},"format":{"$ref":"#/components/schemas/DatasetFormat"},"size":{"type":"integer","title":"Size"},"ground_truth":{"type":"boolean","title":"Ground Truth"},"run_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Run Id"},"generated":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Generated"},"generated_by":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Generated By"},"created_at":{"type":"string","format":"date-time","title":"Created At"}},"type":"object","required":["id","filename","format","size","ground_truth","run_id","generated","generated_by","created_at"],"title":"DatasetResponse"},"DeploymentType":{"type":"string","enum":["local","development","staging","production"],"title":"DeploymentType"},"ExperimentCreate":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description","default":""},"dataset":{"type":"string","format":"uuid","title":"Dataset"},"max_samples":{"type":"integer","title":"Max Samples","default":-1},"task":{"$ref":"#/components/schemas/TaskType","default":"summarization"}},"type":"object","required":["name","dataset"],"title":"ExperimentCreate"},"GetExperimentResponse":{"properties":{"id":{"type":"string","title":"Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"task":{"$ref":"#/components/schemas/TaskType"},"dataset":{"type":"string","format":"uuid","title":"Dataset"},"updated_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Updated At"},"workflows":{"anyOf":[{"items":{"$ref":"#/components/schemas/WorkflowDetailsResponse"},"type":"array"},{"type":"null"}],"title":"Workflows"}},"type":"object","required":["id","name","description","created_at","task","dataset"],"title":"GetExperimentResponse"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"HealthResponse":{"properties":{"status":{"type":"string","title":"Status"},"deployment_type":{"$ref":"#/components/schemas/DeploymentType"}},"type":"object","required":["status","deployment_type"],"title":"HealthResponse"},"Job":{"properties":{"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"submission_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Submission Id"},"driver_info":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Driver Info"},"status":{"$ref":"#/components/schemas/JobStatus"},"entrypoint":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Entrypoint"},"message":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Message"},"error_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error Type"},"start_time":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Start Time"},"end_time":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"End Time"},"metadata":{"type":"object","title":"Metadata"},"runtime_env":{"type":"object","title":"Runtime Env"},"driver_agent_http_address":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Driver Agent Http Address"},"driver_node_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Driver Node Id"},"driver_exit_code":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Driver Exit Code"},"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"experiment_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Experiment Id"},"updated_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Updated At"}},"type":"object","required":["status","id","name","description","created_at"],"title":"Job","description":"Job represents the composition of JobResponse and JobSubmissionResponse.\n\nJobSubmissionResponse was formerly returned from some /health/jobs related\nendpoints, while JobResponse was used by /jobs related endpoints.\n\nThe only conflicting field in the two schemas is 'status' which is consistent\nin what it intends to represent, but uses different types (JobStatus/str).\n\nThe Job type has both id and submission_id which will contain the same data.\n\nNOTE: Job is intended to reduce breaking changes experienced by the UI and other\nconsumers. Tt was not conceived as a type that will be around for long, as\nthe API needs to be refactored to better support experiments."},"JobAnnotateConfig":{"properties":{"job_type":{"type":"string","const":"annotate","title":"Job Type","default":"annotate"},"task":{"$ref":"#/components/schemas/TaskType","default":"summarization"},"store_to_dataset":{"type":"boolean","title":"Store To Dataset","default":false}},"type":"object","title":"JobAnnotateConfig"},"JobAnnotateCreate":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description","default":""},"dataset":{"type":"string","format":"uuid","title":"Dataset"},"max_samples":{"type":"integer","title":"Max Samples","default":-1},"job_config":{"$ref":"#/components/schemas/JobAnnotateConfig"}},"type":"object","required":["name","dataset","job_config"],"title":"JobAnnotateCreate"},"JobEvalConfig":{"properties":{"job_type":{"type":"string","const":"evaluator","title":"Job Type","default":"evaluator"},"metrics":{"items":{"type":"string"},"type":"array","title":"Metrics","default":["meteor","rouge","bertscore","bleu"]}},"type":"object","title":"JobEvalConfig"},"JobEvalCreate":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description","default":""},"dataset":{"type":"string","format":"uuid","title":"Dataset"},"max_samples":{"type":"integer","title":"Max Samples","default":-1},"job_config":{"$ref":"#/components/schemas/JobEvalConfig"}},"type":"object","required":["name","dataset","job_config"],"title":"JobEvalCreate"},"JobInferenceConfig":{"properties":{"job_type":{"type":"string","const":"inference","title":"Job Type","default":"inference"},"model":{"type":"string","title":"Model"},"provider":{"type":"string","title":"Provider"},"task_definition":{"oneOf":[{"$ref":"#/components/schemas/SummarizationTaskDefinition"},{"$ref":"#/components/schemas/TranslationTaskDefinition"},{"$ref":"#/components/schemas/TextGenerationTaskDefinition"}],"title":"Task Definition","discriminator":{"propertyName":"task","mapping":{"summarization":"#/components/schemas/SummarizationTaskDefinition","text-generation":"#/components/schemas/TextGenerationTaskDefinition","translation":"#/components/schemas/TranslationTaskDefinition"}}},"accelerator":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Accelerator","default":"auto"},"revision":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Revision","default":"main"},"use_fast":{"type":"boolean","title":"Use Fast","default":true},"trust_remote_code":{"type":"boolean","title":"Trust Remote Code","default":false},"torch_dtype":{"type":"string","title":"Torch Dtype","default":"auto"},"base_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Base Url"},"output_field":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Output Field","default":"predictions"},"max_tokens":{"type":"integer","title":"Max Tokens","default":1024},"frequency_penalty":{"type":"number","title":"Frequency Penalty","default":0.0},"temperature":{"type":"number","title":"Temperature","default":1.0},"top_p":{"type":"number","title":"Top P","default":1.0},"store_to_dataset":{"type":"boolean","title":"Store To Dataset","default":false},"max_new_tokens":{"type":"integer","title":"Max New Tokens","default":500}},"type":"object","required":["model","provider"],"title":"JobInferenceConfig"},"JobInferenceCreate":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description","default":""},"dataset":{"type":"string","format":"uuid","title":"Dataset"},"max_samples":{"type":"integer","title":"Max Samples","default":-1},"job_config":{"$ref":"#/components/schemas/JobInferenceConfig"}},"type":"object","required":["name","dataset","job_config"],"title":"JobInferenceCreate"},"JobLogsResponse":{"properties":{"logs":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Logs"}},"type":"object","title":"JobLogsResponse"},"JobResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"status":{"$ref":"#/components/schemas/JobStatus"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"experiment_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Experiment Id"},"updated_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Updated At"}},"type":"object","required":["id","name","description","status","created_at"],"title":"JobResponse"},"JobResultDownloadResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"download_url":{"type":"string","title":"Download Url"}},"type":"object","required":["id","download_url"],"title":"JobResultDownloadResponse"},"JobResultResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"job_id":{"type":"string","format":"uuid","title":"Job Id"}},"type":"object","required":["id","job_id"],"title":"JobResultResponse"},"JobResults":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"metrics":{"anyOf":[{"items":{"type":"object"},"type":"array"},{"type":"null"}],"title":"Metrics"},"parameters":{"anyOf":[{"items":{"type":"object"},"type":"array"},{"type":"null"}],"title":"Parameters"},"metric_url":{"type":"string","title":"Metric Url"},"artifact_url":{"type":"string","title":"Artifact Url"}},"type":"object","required":["id","metric_url","artifact_url"],"title":"JobResults"},"JobStatus":{"type":"string","enum":["created","pending","running","failed","succeeded"],"title":"JobStatus"},"ListingResponse_DatasetResponse_":{"properties":{"total":{"type":"integer","title":"Total"},"items":{"items":{"$ref":"#/components/schemas/DatasetResponse"},"type":"array","title":"Items"}},"type":"object","required":["total","items"],"title":"ListingResponse[DatasetResponse]"},"ListingResponse_GetExperimentResponse_":{"properties":{"total":{"type":"integer","title":"Total"},"items":{"items":{"$ref":"#/components/schemas/GetExperimentResponse"},"type":"array","title":"Items"}},"type":"object","required":["total","items"],"title":"ListingResponse[GetExperimentResponse]"},"ListingResponse_Job_":{"properties":{"total":{"type":"integer","title":"Total"},"items":{"items":{"$ref":"#/components/schemas/Job"},"type":"array","title":"Items"}},"type":"object","required":["total","items"],"title":"ListingResponse[Job]"},"ListingResponse_ModelsResponse_":{"properties":{"total":{"type":"integer","title":"Total"},"items":{"items":{"$ref":"#/components/schemas/ModelsResponse"},"type":"array","title":"Items"}},"type":"object","required":["total","items"],"title":"ListingResponse[ModelsResponse]"},"ModelInfo":{"properties":{"parameter_count":{"type":"string","title":"Parameter Count"},"tensor_type":{"type":"string","title":"Tensor Type"},"model_size":{"type":"string","title":"Model Size"}},"type":"object","required":["parameter_count","tensor_type","model_size"],"title":"ModelInfo"},"ModelRequirement":{"type":"string","enum":["api_key","llamafile"],"title":"ModelRequirement","description":"Represents a type of requirement for a model"},"ModelsResponse":{"properties":{"display_name":{"type":"string","title":"Model name","description":"Name of the model used in the task. It's just a display name"},"model":{"type":"string","title":"Model ID","description":"Model ID used in the task"},"provider":{"type":"string","title":"Model Provider","description":"LiteLLM key for where the model is hosted (e.g. `openai`, `deepseek`, `gpt3`, etc). If using a HF model that is hosted in the inference job, use `hf`"},"base_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Base URL","description":"Base URL for the model API (if applicable, e.g. for Llamafile, vLLM, etc)"},"website_url":{"type":"string","title":"Information page URL","description":"URI containing detailed information about the model"},"description":{"type":"string","title":"Model description","description":"Detailed model description"},"requirements":{"items":{"$ref":"#/components/schemas/ModelRequirement"},"type":"array","title":"Model requirements","description":"Additional requirements that need to be fulfilled before using the model (e.g. `{ModelRequirement.LLAMAFILE}` to indicate that a llamafile needs to be running or `{ModelRequirement.API_KEY}` to indicate that an API key is necessary)"},"info":{"anyOf":[{"$ref":"#/components/schemas/ModelInfo"},{"type":"null"}],"title":"Model info","description":"Detailed model capabilities"},"tasks":{"items":{"additionalProperties":{"anyOf":[{"type":"object"},{"type":"null"}]},"type":"object"},"type":"array","title":"Applicable tasks","description":"List of tasks to which the model can be applied"}},"type":"object","required":["display_name","model","provider","website_url","description","tasks"],"title":"ModelsResponse","description":"Contains detailed model information"},"SummarizationTaskDefinition":{"properties":{"task":{"type":"string","const":"summarization","title":"Task","default":"summarization"},"system_prompt":{"type":"string","title":"System Prompt","description":"System prompt for summarization tasks","default":"You are a helpful assistant, expert in text summarization. For every prompt you receive, provide a summary of its contents in at most two sentences."}},"additionalProperties":false,"type":"object","title":"SummarizationTaskDefinition"},"TaskType":{"type":"string","enum":["summarization","translation","text-generation"],"title":"TaskType","description":"TaskType refers to the different usecases supported.\nWe use the same terminology as the HuggingFace library and support a subset of the tasks.\nRefer: https://huggingface.co/tasks\nWhen using HF models, the task type is used to determine the pipeline to use."},"TextGenerationTaskDefinition":{"properties":{"task":{"type":"string","const":"text-generation","title":"Task","default":"text-generation"},"system_prompt":{"type":"string","title":"System Prompt","description":"System prompt needs to be set by the user for for text-generation tasks"}},"additionalProperties":false,"type":"object","required":["system_prompt"],"title":"TextGenerationTaskDefinition"},"TranslationTaskDefinition":{"properties":{"task":{"type":"string","const":"translation","title":"Task","default":"translation"},"system_prompt":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"System Prompt","description":"System prompt for translation tasks","examples":["translate English to German"]},"source_language":{"type":"string","title":"Source Language","examples":["en","English"]},"target_language":{"type":"string","title":"Target Language","examples":["de","German"]}},"additionalProperties":false,"type":"object","required":["source_language","target_language"],"title":"TranslationTaskDefinition"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WorkflowCreateRequest":{"properties":{"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description","default":""},"experiment_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Experiment Id"},"model":{"type":"string","title":"Model"},"provider":{"type":"string","title":"Provider"},"dataset":{"type":"string","format":"uuid","title":"Dataset"},"max_samples":{"type":"integer","title":"Max Samples","default":-1},"base_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Base Url"},"system_prompt":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"System Prompt"},"inference_output_field":{"type":"string","title":"Inference Output Field","default":"predictions"},"config_template":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Config Template"}},"type":"object","required":["name","model","provider","dataset"],"title":"WorkflowCreateRequest"},"WorkflowDetailsResponse":{"properties":{"id":{"type":"string","title":"Id"},"experiment_id":{"type":"string","title":"Experiment Id"},"model":{"type":"string","title":"Model"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"status":{"$ref":"#/components/schemas/WorkflowStatus"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Updated At"},"jobs":{"anyOf":[{"items":{"$ref":"#/components/schemas/JobResults"},"type":"array"},{"type":"null"}],"title":"Jobs"},"metrics":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Metrics"},"parameters":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Parameters"},"artifacts_download_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Artifacts Download Url"}},"type":"object","required":["id","experiment_id","model","name","description","status","created_at"],"title":"WorkflowDetailsResponse"},"WorkflowResponse":{"properties":{"id":{"type":"string","title":"Id"},"experiment_id":{"type":"string","title":"Experiment Id"},"model":{"type":"string","title":"Model"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"status":{"$ref":"#/components/schemas/WorkflowStatus"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Updated At"}},"type":"object","required":["id","experiment_id","model","name","description","status","created_at"],"title":"WorkflowResponse"},"WorkflowStatus":{"type":"string","enum":["created","running","failed","succeeded"],"title":"WorkflowStatus"}}},"tags":[{"name":"health","description":"Health check for the application."},{"name":"datasets","description":"Upload and download datasets."},{"name":"experiments","description":"Create and manage experiments."},{"name":"workflows","description":"Create and manage workflows."},{"name":"jobs","description":"Create and manage jobs running on Ray."},{"name":"models","description":"Return a list of suggested models for a given task."}]}